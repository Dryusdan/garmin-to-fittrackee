---
name: Code quality
run-name: Codequality
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    branches:
      - main
    paths-ignore:
      - coverage.json

jobs:
  build-program:
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Ubuntu dependencies
        run: sudo apt-get install -y bash git nodejs yarnpkg
      - name: Install Poetry
        run: |
          python3 -m venv ${HOME}/venv
          ${HOME}/venv/bin/activate
          pip3 install poetry -U --break-system-packages
      - name: Install test programm
        run: |
          ${HOME}/venv/bin/activate
          curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain stable -y
          . "${HOME}"/.cargo/env
          poetry install --with test
      - name: Build wheel package
        run: |
          . "${HOME}"/.cargo/env
          poetry build
  run-code-formatters:
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Ubuntu dependencies
        run: sudo apt-get install -y bash git nodejs yarnpkg
      - name: Install Poetry
        run: |
          python3 -m venv ${HOME}/venv
          ${HOME}/venv/bin/activate
          pip3 install poetry -U --break-system-packages
      - name: Install test programm
        run: |
          ${HOME}/venv/bin/activate
          curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain stable -y
          . "${HOME}"/.cargo/env
          poetry install --with dev
      - name: Run isort check
        run: |
          ${HOME}/venv/bin/activate
          poetry run isort . --check-only
      - name: Run ruff check
        run: |
          ${HOME}/venv/bin/activate
          poetry run ruff check . --exit-non-zero-on-fix
      - name: Run ruff formatter
        run: |
          ${HOME}/venv/bin/activate
          poetry run ruff format . --check
  run-unittest:
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Ubuntu dependencies
        run: sudo apt-get install -y bash git nodejs yarnpkg
      - name: Install Poetry
        run: |
          python3 -m venv ${HOME}/venv
          ${HOME}/venv/bin/activate
          pip3 install poetry -U --break-system-packages
      - name: Install test programm
        run: |
          ${HOME}/venv/bin/activate
          curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain stable -y
          . "${HOME}"/.cargo/env
          poetry install --with test
      - name: Run unit test
        run: |
          ${HOME}/venv/bin/activate
          poetry run pytest --cov=.
