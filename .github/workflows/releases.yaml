---
name: Prepare releases
run-name: Prepare_releases
on:
  pull_request:
    branches:
      - stable
    paths-ignore:
      - 'coverage.json'
      - 'pyproject.toml'
  push:
    branches:
      - stable
    paths-ignore:
      - 'coverage.json'
      - 'pyproject.toml'

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_MESSAGE: "[chore] Update coverage.json"
      CI_COMMIT_AUTHOR: gitea-actions-bot
      CI_COMMIT_EMAIL: gitea-actions-bot@dryusdan.fr
      REPOSITORY_USER: ${{ secrets.REPOSITORY_USER }} 
      REPOSITORY_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set environment variable "is-auto-commit"
        run: |
          if git show --summary --oneline --pretty=format:"%an" | grep -q ${{ env.CI_COMMIT_AUTHOR }}
          then
            if git show --summary --oneline --pretty=format:"%s" | grep -q ${{ env.CI_COMMIT_MESSAGE }}
            then
              echo "is-auto-commit=true" >> $GITHUB_ENV
            else
              echo "is-auto-commit=false" >> $GITHUB_ENV
            fi
          else
            echo "is-auto-commit=false" >> $GITHUB_ENV
          fi
      - name: Set up Python 3.13
        if: env.is-auto-commit == 'false' && github.event_name != 'pull_request'
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Ubuntu dependencies
        if: env.is-auto-commit == 'false' && github.event_name != 'pull_request'
        run: sudo apt-get install -y bash git nodejs yarnpkg
      - name: Install Poetry
        if: env.is-auto-commit == 'false' && github.event_name != 'pull_request'
        run: |
          python3 -m venv ${HOME}/venv
          ${HOME}/venv/bin/activate
          pip3 install poetry -U --break-system-packages
      - name: Install tests dependencies
        if: env.is-auto-commit == 'false' && github.event_name != 'pull_request'
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain stable -y
          . "${HOME}"/.cargo/env
          ${HOME}/venv/bin/activate
          poetry install --with test
      - name: Deploy new package on repository
        if: env.is-auto-commit == 'false' && github.event_name != 'pull_request'
        run: |
          ${HOME}/venv/bin/activate
          poetry config http-basic.gitea ${{ env.REPOSITORY_USER }} ${{ env.REPOSITORY_TOKEN }}
          poetry config pypi-token.pypi ${{ env.PYPI_TOKEN }}
          poetry publish --build --repository gitea
          poetry publish
